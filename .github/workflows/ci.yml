name: Build & Test

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: macos-15
    steps:
      - name: Checkout workspace
        uses: actions/checkout@v4
        timeout-minutes: 5
        with:
          fetch-depth: 0
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Select XCode 16.4
        run: |
          sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer
          xcodebuild -version
      - name: Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/native
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Kotlin Native Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Android Cache
        uses: actions/cache@v4
        with:
          path: ~/.android
          key: ${{ runner.os }}-android-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-android-
      - name: Build & Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./gradlew
          ./gradlew build test assembleXCFramework --parallel
      - name: Set RELEASE_VERSION variable
        run: |
          echo "RELEASE_VERSION=$(cat build/version.txt)" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports.zip
          path: build/reports
      - name: List files
        run: |
          ls -lah build/libs/  build/outputs/aar/ build/XCFrameworks/release/
      - name: Upload polybool-kotlin.jar
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: polybool-kotlin.jar
          path: build/libs/polybool-kotlin-jvm-${{ env.RELEASE_VERSION }}.jar
      - name: Upload polybool-kotlin.aar
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: polybool-kotlin.aar
          path: build/outputs/aar/polybool-kotlin-release.aar
      - name: Upload polybool-kotlin.xcframework
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: polybool_kotlin.xcframework
          path: build/XCFrameworks/release/polybool_kotlin.xcframework
      - name: Publish to Maven Central
        if: startsWith(github.ref, 'refs/tags/') # Only for releases
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          SIGNING_ENABLED: true
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SINGING_SECRET_KEY }}

    
